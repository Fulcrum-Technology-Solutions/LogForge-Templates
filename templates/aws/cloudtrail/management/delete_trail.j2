{%- set account_id = random_int(100000000000, 999999999999) -%}
{%- set source_ip = random_public_ip() -%}
{%- set user = registry.get_random_user() -%}
{%- set username = user.username if user else "jsmith" -%}
{%- set domain = registry.get_organization_field('domain') | default("example.com") -%}
{%- set role_id = random_string(13, 'abcdef0123456789') -%}
{%- set principal_id = random_string(17, 'ABCDEFGHIJKLMNOPQRSTUVWXYZ0123456789') -%}
{%- set access_key_id = random_string(20, 'ABCDEFGHIJKLMNOPQRSTUVWXYZ0123456789') -%}
{%- set session_created_time = current_timestamp() - random_int(1000, 10000) -%}
{%- set request_id = random_guid() -%}
{%- set event_id = random_guid() -%}
{%- set trail_name = ["security-audit", "compliance-trail", "management-events", "data-events", "test-trail"] | random -%}
{%- set aws_regions = ["us-east-1", "us-west-2", "eu-west-1", "ap-southeast-1", "us-gov-west-1"] -%}
{%- set current_region = aws_regions | random -%}
{
  "metadata": {
    "product": {
      "version": "1.11",
      "name": "CloudTrail",
      "vendor_name": "AWS",
      "feature": {
        "name": "Management"
      }
    },
    "event_code": "AwsApiCall",
    "uid": "{{ random_guid() }}",
    "profiles": ["cloud", "datetime"],
    "version": "1.1.0"
  },
  "time": {{ current_timestamp() }},
  "time_dt": "{{ current_timestamp() | timestamp_to_iso }}",
  "cloud": {
    "region": "{{ current_region }}",
    "provider": "AWS"
  },
  "api": {
    "response": {
      "error": "",
      "message": "",
      "data": ""
    },
    "operation": "DeleteTrail",
    "version": "",
    "service": {
      "name": "cloudtrail.amazonaws.com"
    },
    "request": {
      "data": "{\"name\":\"arn:aws:cloudtrail:{{ current_region }}:{{ account_id }}:trail/{{ trail_name }}\"}",
      "uid": "{{ request_id }}"
    }
  },
  "dst_endpoint": {
    "svc_name": "cloudtrail.amazonaws.com"
  },
  "actor": {
    "user": {
      "type": "AssumedRole",
      "name": "{{ username }}@{{ domain }}",
      "uid_alt": "{{ principal_id }}:{{ username }}@{{ domain }}",
      "uid": "arn:aws:sts::{{ account_id }}:assumed-role/{{ role_id }}/{{ username }}@{{ domain }}",
      "account": {
        "uid": "{{ account_id }}"
      },
      "credential_uid": "{{ access_key_id }}"
    },
    "session": {
      "created_time": {{ session_created_time }},
      "created_time_dt": "{{ session_created_time | timestamp_to_iso }}",
      "is_mfa": {{ [true, false] | random | tojson }},
      "issuer": "arn:aws:iam::{{ account_id }}:role/aws-reserved/sso.amazonaws.com/{{ current_region }}/{{ role_id }}"
    },
    "invoked_by": "",
    "idp": {
      "name": ""
    }
  },
  "http_request": {
    "user_agent": "{{ ['Mozilla/5.0 (Macintosh; Intel Mac OS X 10_15_7) AppleWebKit/537.36', 'Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36', 'AWS CLI/2.0.0 Python/3.8.0', 'aws-sdk-python/1.26.0'] | random }}"
  },
  "src_endpoint": {
    "uid": "",
    "ip": "{{ source_ip }}",
    "domain": ""
  },
  "session": {
    "uid": "",
    "uid_alt": "",
    "credential_uid": "",
    "issuer": ""
  },
  "policy": {
    "uid": ""
  },
  "resources": null,
  "class_name": "API Activity",
  "class_uid": 6003,
  "category_name": "Application Activity",
  "category_uid": 6,
  "severity_id": 1,
  "severity": "Informational",
  "user": {
    "uid_alt": "",
    "uid": "",
    "name": ""
  },
  "activity_name": "Delete",
  "activity_id": 4,
  "type_uid": 600304,
  "type_name": "API Activity: Delete",
  "status": "{{ ['Success', 'Failure'] | random }}",
  "is_mfa": {{ [true, false] | random | tojson }},
  "unmapped": {
    "userIdentity.sessionContext.sessionIssuer.type": "Role",
    "sessionCredentialFromConsole": "{{ ['true', 'false'] | random }}",
    "tlsDetails.clientProvidedHostHeader": "cloudtrail.{{ current_region }}.amazonaws.com",
    "userIdentity.sessionContext.sessionIssuer.userName": "{{ role_id }}",
    "userIdentity.sessionContext.sessionIssuer.principalId": "{{ principal_id }}",
    "recipientAccountId": "{{ account_id }}",
    "readOnly": "false",
    "tlsDetails.tlsVersion": "{{ ['TLSv1.2', 'TLSv1.3'] | random }}",
    "managementEvent": "true",
    "userIdentity.sessionContext.sessionIssuer.accountId": "{{ account_id }}",
    "tlsDetails.cipherSuite": "{{ ['TLS_AES_128_GCM_SHA256', 'TLS_AES_256_GCM_SHA384', 'TLS_CHACHA20_POLY1305_SHA256'] | random }}"
  },
  "accountid": "{{ account_id }}",
  "region": "{{ current_region }}",
  "asl_version": "",
  "observables": [
    {
      "name": "src_endpoint.ip",
      "value": "{{ source_ip }}",
      "type": "IP Address",
      "type_id": 2
    }
  ]
}